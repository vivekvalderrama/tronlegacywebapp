pipeline {
  agent any

  tools {
    maven "maven"
  }

  stages {
    stage('checkout') {
      steps {
        git branch: 'development', credentialsId: 'fd22124d-d6df-4124-b3b5-ebd921a2542e', url: 'https://github.com/vivekvalderrama/tronlegacywebapp.git'
      }
    }

    stage('COMPILE') {
      steps {
        sh "mvn clean compile"
      }
    }

    stage('BUILD') {
      steps {
        sh "mvn clean package"
      }
    }

    stage('SQ REPORT') {
      steps {
        sh "mvn clean sonar:sonar"
      }
    }

    stage('Deploy to Nexus') {
      steps {
        sh "mvn clean deploy"
      }
    }

    stage('Deploy App') {
      steps {
        echo "Deploying WAR file using curl..."
        sh """
          curl -u admin:vivek123 \
          --upload-file /var/lib/jenkins/workspace/disney-declarative-pipleline-dev/target/tron-legacy.war \
          "http://54.83.14.110:8080/manager/text/deploy?path=/tronlegacywebapp&update=true"
        """
      }
    }
  }

   post {
    success {
      wrap([$class: 'BuildUser']) {
        slackSend(channel: '#disney-om', color: 'good',
          message: "✅ SUCCESS: Job '${env.JOB_NAME}' [#${env.BUILD_NUMBER}] by ${env.BUILD_USER} was successful. ${env.BUILD_URL}")
      }
    }
    failure {
      wrap([$class: 'BuildUser']) {
        slackSend(channel: '#disney-om', color: 'danger',
          message: "❌ FAILURE: Job '${env.JOB_NAME}' [#${env.BUILD_NUMBER}] by ${env.BUILD_USER} failed. ${env.BUILD_URL}")
      }
    }
    always {
      echo "Build finished with status: ${currentBuild.currentResult}"
    }
  }
}
